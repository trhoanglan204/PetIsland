@model ProductVM
@{
	ViewData["Title"] = "Detail";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
	<div class="col-sm-3">
		<partial name="_SidebarPartial" />
	</div>

	<div class="col-sm-9 padding-right">
		<div class="product-details">
			<!--product-details-->
			<div class="col-sm-5">
				<div class="view-product">
					@if (@Model.Product!.Image == "null.jpg")
					{
						<img src="~/images/null.jpg" alt="" width="100px" height="200px" />
					}
					else
					{
						<img src="~/images/products/@Model.Product.Image" alt="" width="100px" height="200px" />
					}
					<h3>ZOOM</h3>
				</div>
				<div id="similar-product" class="carousel slide" data-ride="carousel">

					<!-- Wrapper for slides -->
					<div class="carousel-inner">
						<div class="item">
							<a href=""><img src="images/product-details/similar1.jpg" alt=""></a>
							<a href=""><img src="images/product-details/similar2.jpg" alt=""></a>
							<a href=""><img src="images/product-details/similar3.jpg" alt=""></a>
						</div>
					</div>

					<!-- Controls -->
					<a class="left item-control" href="#similar-product" data-slide="prev">
						<i class="fa fa-angle-left"></i>
					</a>
					<a class="right item-control" href="#similar-product" data-slide="next">
						<i class="fa fa-angle-right"></i>
					</a>
				</div>

			</div>
			<div class="col-sm-7">
				<div class="product-information">
					<!--/product-information-->
					<h2>@Model.Product.Name</h2>
					<span>
						<span style="color: orange; font-weight: bold;">
							@Model.Product.Price.ToString("#,##0 VNĐ")
						</span>
						<label style="margin-left: 10px;">Quantity:</label>
						<input type="number" name="quantity" value="1" min="1" class="form-control d-inline-block" style="width: 70px; text-align: center;" />
						<button class="btn btn-warning add-to-cart ml-2">
							<i class="fa fa-shopping-cart"></i>Add to cart
						</button>
					</span>
					<p>
						<b>Availability:</b>
						@if (Model.Product.Quantity > 0)
						{
							<span style="color:green">In Stock (@Model.Product.Quantity sản phẩm còn lại)</span>
						}
						else
						{
							<span style="color:red">Out of stock</span>
						}
					</p>
					<p>
						<b>Condition:</b>
						@{
							var isNew = Model.Product.CreatedDate >= DateTime.Now.AddMonths(-1);
						}
						@if (isNew)
						{
							<span style="color:green">New</span>
						}
						else
						{
							<span style="color:gray">Normal</span>
						}
					</p>
					<p><b>Brand:</b> @Model.Product.Brand?.Name</p>
					<p><b>Category:</b> @Model.Product.ProductCategory?.Name</p>
					<a href=""><img src="images/product-details/share.png" class="share img-responsive" alt="" /></a>
				</div><!--/product-information-->
			</div>
		</div><!--/product-details-->

		<div class="category-tab shop-details-tab">
			<!--category-tab-->
			<div class="col-sm-12">
				<ul class="nav nav-tabs">
					<li class="active"><a href="#details" data-toggle="tab">Details</a></li>
					<li><a href="#reviews" data-toggle="tab">Review</a></li>
				</ul>
			</div>
			<div class="tab-content">
				<div class="tab-pane fade active in" id="details">

					@Html.Raw(Model.Product.Description)

				</div>
				<div class="tab-pane fade" id="reviews">
					@if (User.Identity?.IsAuthenticated ?? false)
					{
						var userRating = ViewBag.UserRatingEntry as RatingEntryModel;
						<div class="col-sm-12">
							<p><b>@(userRating != null ? "Đánh giá của bạn" : "Viết đánh giá mới")</b></p>
							@if (userRating != null)
							{
								<div class="mb-2">
									<p><i class="fa fa-user"></i> @User.Identity.Name</p>
									<p><i class="fa fa-history"></i> Đã đánh giá vào: @userRating.RatingDate.ToString("dd/MM/yyyy HH:mm")</p>
								</div>
							}
							<form id="reviewForm" autocomplete="off" asp-action="CommentProduct" asp-controller="Product" method="POST">
								<input type="hidden" asp-for="Product!.Id" value="@Model.Product.Id" />
								<input type="hidden" asp-for="UserStar" id="starInput" value="@(userRating?.Star ?? 0)" />
								<input type="hidden" name="returnUrl" value="@Context.Request.Path + Context.Request.QueryString" />
								<div class="form-group d-flex align-items-center gap-2">
									<label class="me-2"><b>Rating:</b></label>
									<div id="starRating" class="@(userRating != null ? "disabled-stars" : "") d-flex">
										@for (int i = 1; i <= 5; i++)
										{
											<span class="star" data-value="@i" style="cursor:pointer;">&#9733;</span>
										}
									</div>
									<span asp-validation-for="UserStar" class="text-danger"></span>
								</div>
								<textarea name="Comment" id="commentBox" class="form-control" @(userRating != null ? "readonly='readonly'" : "")>@userRating?.Comment</textarea>
								<span asp-validation-for="Comment" class="text-danger"></span>

								@if (userRating == null)
								{
									<button type="submit" class="btn btn-default pull-right">Submit</button>
								}
								else
								{
									<a href="javascript:void(0);" id="editReviewLink">Đánh giá lại</a>

									<div id="editControls" style="display:none; margin-top: 10px;">
										<button type="submit" class="btn btn-success btn-sm">Cập nhật</button>
										<a href="javascript:void(0);" id="cancelEdit" class="btn btn-link btn-sm">Huỷ</a>
									</div>
								}
							</form>
						</div>
					}
					@{
						var positiveList = ViewBag.TopPositiveRatings as List<RatingEntryModel>;
						var negativeList = ViewBag.TopNegativeRatings as List<RatingEntryModel>;
					}
					@if ((positiveList == null || !positiveList.Any()) && (negativeList == null || !negativeList.Any()))
					{
						<p>Chưa có đánh giá nào cả</p>
						<p>
							Trở thành người đánh giá đầu tiên?
							@if (User.Identity == null || !User.Identity.IsAuthenticated)
							{
								<a asp-controller="Account" asp-action="Login" class="btn btn-sm btn-primary ml-2">Đăng nhập ngay</a>
							}
						</p>
					}
					else
					{
						if (positiveList != null && positiveList.Any())
						{
							<h4>Top đánh giá tích cực:</h4>
							<ul>
								@foreach (var r in positiveList)
								{
									<li><i class="fa fa-star"></i> @r.Star sao - @r.Comment</li>
								}
							</ul>
						}

						if (negativeList != null && negativeList.Any())
						{
							<h4>Top đánh giá tiêu cực:</h4>
							<ul>
								@foreach (var r in negativeList)
								{
									<li><i class="fa fa-star"></i> @r.Star sao - @r.Comment</li>
								}
							</ul>
						}
					}
				</div>
			</div>
		</div><!--/category-tab-->

		<div class="recommended_items">
			<!--recommended_items-->
			<h2 class="title text-center">Related Products</h2>

			<div id="recommended-item-carousel" class="carousel slide" data-ride="carousel">
				<div class="carousel-inner">
					<div class="item active">
						@{
							var relatedProducts = ViewBag.RelatedProducts as IEnumerable<ProductModel>;
						}
						@if (relatedProducts != null && relatedProducts.Any()){
							foreach (var relatedProduct in relatedProducts)
							{
							<div class="col-sm-4">
								<div class="product-image-wrapper">
									<div class="single-products">
										<div class="productinfo text-center">
											<a asp-action="Detail" asp-controller="Product" asp-route-Id="@relatedProduct.Id">
												@if (@relatedProduct.Image == "null.jpg")
												{
													<img src="~/images/null.jpg" alt="" width="100px" height="200px" />
												}
												else
												{
													<img src="~/images/products/@relatedProduct.Image" alt="@relatedProduct.Name" width="100px" height="200px" />
												}
												<h2>@relatedProduct.Price.ToString("#,##0 VNĐ")</h2>
												<p>@relatedProduct.Name</p>
												<p>Danh mục: @relatedProduct.ProductCategory?.Name</p>
												<p>Thương hiệu: @relatedProduct.Brand?.Name</p>
											</a>
										</div>
									</div>
								</div>
							</div>
							}
						}	
					</div>
				</div>
				<a class="left recommended-item-control" href="#recommended-item-carousel" data-slide="prev">
					<i class="fa fa-angle-left"></i>
				</a>
				<a class="right recommended-item-control" href="#recommended-item-carousel" data-slide="next">
					<i class="fa fa-angle-right"></i>
				</a>
			</div>

		</div><!--/recommended_items-->

	</div>
</div>
@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const stars = document.querySelectorAll(".star");
			const starInput = document.getElementById("starInput");
			const commentBox = document.getElementById("commentBox");
			const editLink = document.getElementById("editReviewLink");
			const cancelBtn = document.getElementById("cancelEdit");
			const editControls = document.getElementById("editControls");

			let originalStar = parseInt(starInput?.value || "0");
			let originalComment = commentBox?.value;

			// Hiện sao đã chọn
			const highlightStars = (value) => {
				stars.forEach(s => {
					const starVal = parseInt(s.dataset.value);
					s.style.color = starVal <= value ? "#FFD700" : "#ccc";
				});
			};

			highlightStars(originalStar);

			stars.forEach(s => {
				s.addEventListener("click", function () {
					if (starInput.hasAttribute("readonly")) return;  // kiểm tra readonly trên comment (hoặc dùng class disabled-stars)
					const val = parseInt(this.dataset.value);
					starInput.value = val;
					highlightStars(val);
				});
			});

			if (editLink) {
				editLink.addEventListener("click", function () {
					commentBox.removeAttribute("readonly");
					stars.forEach(s => s.classList.remove("disabled-stars"));
					editControls.style.display = "block";
					editLink.style.display = "none";
				});
			}Comment

			if (cancelBtn) {
				cancelBtn.addEventListener("click", function () {
					// Khôi phục comment và sao ban đầu
					commentBox.value = originalComment;
					commentBox.setAttribute("readonly", true);
					starInput.value = originalStar;
					highlightStars(originalStar);
					stars.forEach(s => s.classList.add("disabled-stars"));
					editControls.style.display = "none";
					editLink.style.display = "inline";
				});
			}
		});
	</script>
	<script>
		$('.add-to-cart').click(function () {
			var Id = $(this).data("product_id");
			//alert(product_id);
			$.ajax({
				type: "POST",
				url: "@Url.Action("Add", "Cart")",
				data: { Id: Id }, // Send data to the server

				success: function (result) {
					// Handle successful update
					if (result) {

						Swal.fire("Thêm giỏ hàng thành công.");
					}
				}

			});
		});

	</script>
	<style>
		#starRating {
			display: flex;
			flex-direction: row; 
			gap: 5px; 
		}

		.star {
			font-size: 30px;
			color: #ccc;
			cursor: pointer;
			transition: color 0.2s;
			display: inline-block;
		}

		.disabled-stars span {
			cursor: default !important;
			pointer-events: none;
		}

		.star.selected,
		.star:hover,
		.star:hover ~ .star {
			color: gold;
		}
	</style>
}
